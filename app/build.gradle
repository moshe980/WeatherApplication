plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}
def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()//properties excepts a map format
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))
android {
    compileSdk 32

    defaultConfig {
        applicationId "com.giniapps.weatherapplication"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // should correspond to key/value pairs inside the file
        buildConfigField("String", "AMBEEDATA_BASE_URL", apikeyProperties['AMBEEDATA_BASE_URL'])
        buildConfigField("String", "AMBEEDATA_API_KEY", apikeyProperties['AMBEEDATA_API_KEY'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'

    implementation 'com.google.android.gms:play-services-location:20.0.0'

    implementation 'com.google.android.material:material:1.6.1'

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.0'
    implementation 'androidx.navigation:navigation-fragment:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-service:2.5.0'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Room
    implementation 'androidx.room:room-common:2.4.2'
    implementation 'androidx.room:room-ktx:2.4.2'
    implementation "androidx.room:room-runtime:2.4.2"
    kapt "androidx.room:room-compiler:2.4.2"

    //coroutines + life cycle
    def coroutines_version = "1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.0"

    // Google Maps Location Services
    implementation 'com.google.android.gms:play-services-location:20.0.0'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //hilt:
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-compiler:2.42"


    //work manager:
    def work_version = "2.7.1"
    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:$work_version")
    implementation("androidx.work:work-gcm:$work_version")
    // optional - Test helpers
    androidTestImplementation("androidx.work:work-testing:$work_version")
    // optional - Multiprocess support - for apps that use multiple processes
    implementation "androidx.work:work-multiprocess:$work_version"
    //work + hilt injections
    implementation "androidx.hilt:hilt-work:1.0.0"
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    //media notification style
    implementation "androidx.media:media:1.6.0"

    //Swipe refresh layout:
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    //Chrome Custom Tabs:
    implementation "androidx.browser:browser:1.4.0"

    //Animation with Lottie:
    implementation "com.airbnb.android:lottie:5.0.1"

    //retrofit + picasso + okhttp
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")
    implementation 'com.squareup.picasso:picasso:2.71828'

}